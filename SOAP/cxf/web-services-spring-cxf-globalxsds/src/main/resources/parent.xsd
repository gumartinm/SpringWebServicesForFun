<?xml version="1.0" encoding="UTF-8" ?>
<xsd:schema xmlns="http://gumartinm.name/spring-ws/parent"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    elementFormDefault="qualified"
    attributeFormDefault="unqualified"
    targetNamespace="http://gumartinm.name/spring-ws/parent">
	
    <!--
    	  When should an item be declared as an element versus when should it be defined as a type?
    	  When in doubt, make it a type. You can always create an element from the type, if needed. With a type, other elements can reuse that type.
    	  
    	  <xsd:all> specifies that the child elements can appear in any order.
    	  
    	  <xsd:sequence> specifies child elements can only appear in the order mentioned.
    -->
	
    <xsd:simpleType name="parentEnumType">
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="FIRST"/>
            <xsd:enumeration value="SECOND"/>
            <xsd:enumeration value="THIRD"/>
            <xsd:enumeration value="FOURTH"/>
            <xsd:enumeration value="FIVETH"/>
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="limitedString">
    	<xsd:restriction base="xsd:string">
      		<xsd:maxLength value="30" />
    	</xsd:restriction>
  	</xsd:simpleType>
  	
  	<xsd:complexType name="element">
        <xsd:sequence>
            <xsd:element name="message" type="xsd:string"/>
            <xsd:element name="messageArgs" type="xsd:string" minOccurs="0" maxOccurs="100"/>
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:element name="GeneralFault">
    	<xsd:complexType>
        	<xsd:sequence>
     			<xsd:element name="technicalError" type="xsd:string" />
           		<xsd:element name="elements" type="element" minOccurs="0" maxOccurs="unbounded"/>
        	</xsd:sequence>
    	</xsd:complexType>
    </xsd:element>

</xsd:schema>
