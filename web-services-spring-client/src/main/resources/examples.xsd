<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:parent="http://gumartinm.name/spring-ws/parent"
    xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
    xmlns:inheritance="http://jaxb2-commons.dev.java.net/basic/inheritance"
    xmlns:annox="http://annox.dev.java.net"
    xmlns:example="http://gumartinm.name/spring-ws/example"
    jaxb:version="2.1"
    jaxb:extensionBindingPrefixes="inheritance annox"
    elementFormDefault="qualified"
    targetNamespace="http://gumartinm.name/spring-ws/example">

    <!--
        We are going to use catalog.cat in order to avoid downloading parent.xsd from remote server
    -->
    <xs:import namespace="http://gumartinm.name/spring-ws/parent" schemaLocation="http://gumartinm.name/spring-ws/parent/parent.xsd" />


	<!-- Using inheritance and annox plugin -->
	<xs:element name="ExampleRequest">
	   <xs:complexType>
	       <xs:annotation>
                <xs:appinfo>
                    <annox:annotate>@java.lang.SuppressWarnings({"unchecked","rawtypes"})</annox:annotate> 
                    <inheritance:implements>de.spring.webservices.operations.Request</inheritance:implements>
                </xs:appinfo>
            </xs:annotation>   
            <xs:all>
                <xs:element name="data" type="xs:string" />
            </xs:all>
        </xs:complexType>
	</xs:element>
    <xs:element name="ExampleResponse">
        <xs:complexType>
        <xs:annotation>
                <xs:appinfo>
                    <inheritance:implements>de.spring.webservices.operations.Response</inheritance:implements>
                </xs:appinfo>
            </xs:annotation>  
            <xs:all>
                <xs:element name="data" type="xs:string" />
            </xs:all>
        </xs:complexType>
    </xs:element>


	<!-- Using custombinding.xjb instead of inheritance plugin.
		 Useful when you can not modify your xsd files because they are provided
		 by another person or company
	-->
    <xs:element name="CustomBindingExampleRequest">
	   <xs:complexType>
            <xs:all>
                <xs:element name="data" type="xs:string" />
                <xs:element name="exampleDate" type="xs:dateTime" minOccurs="0" maxOccurs="1" />
                <xs:element name="parentEnum" type="parent:parentEnumType" minOccurs="0" maxOccurs="1" />
            </xs:all>
        </xs:complexType>
	</xs:element>
    <xs:element name="CustomBindingExampleResponse">
        <xs:complexType>
            <xs:all>
                <xs:element name="data" type="xs:string" />
                <xs:element name="exampleDate" type="xs:dateTime" minOccurs="0" maxOccurs="1" />
                <xs:element name="parentEnum" type="parent:parentEnumType" minOccurs="0" maxOccurs="1" />
            </xs:all>
        </xs:complexType>
    </xs:element>

	<!-- Example of creating array list by means of XSD -->
    <xs:complexType name="car">
    	<xs:sequence>
    		<xs:element name="data" type="xs:string" />
    		<xs:element name="parentEnum" type="parent:parentEnumType" minOccurs="0" maxOccurs="100" />
    	</xs:sequence>
    </xs:complexType>
    <xs:complexType name="truck">
    	<xs:all>
    		<xs:element name="data" type="xs:string" />
    		<xs:element name="parentEnum" type="parent:parentEnumType" minOccurs="0" maxOccurs="1" />
    	</xs:all>
    </xs:complexType>
    <xs:element name="vehicles">
        <xs:complexType>
        	<xs:sequence>
				<xs:element name="cars" type="example:car" maxOccurs="unbounded" />
				<xs:element name="trucks" type="example:truck" minOccurs="0" maxOccurs="100" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>

</xs:schema>
